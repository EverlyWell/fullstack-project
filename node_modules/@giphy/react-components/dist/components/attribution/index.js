"use strict";
var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var styled_1 = __importDefault(require("@emotion/styled"));
var react_1 = __importDefault(require("react"));
var avatar_1 = __importDefault(require("./avatar"));
var verified_badge_1 = __importDefault(require("./verified-badge"));
var Container = styled_1.default.div(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n    display: flex;\n    align-items: center;\n    font-family: interface, helvetica, arial;\n"], ["\n    display: flex;\n    align-items: center;\n    font-family: interface, helvetica, arial;\n"])));
var Avatar = styled_1.default(avatar_1.default)(templateObject_2 || (templateObject_2 = __makeTemplateObject(["\n    flex-shrink: 0;\n"], ["\n    flex-shrink: 0;\n"])));
var Username = styled_1.default.div(templateObject_3 || (templateObject_3 = __makeTemplateObject(["\n    color: white;\n    font-size: 17px;\n    font-weight: 700;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    -webkit-font-smoothing: antialiased;\n"], ["\n    color: white;\n    font-size: 17px;\n    font-weight: 700;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    -webkit-font-smoothing: antialiased;\n"])));
var VerifiedBadge = styled_1.default(verified_badge_1.default)(templateObject_4 || (templateObject_4 = __makeTemplateObject(["\n    margin-left: 4px;\n    flex-shrink: 0;\n"], ["\n    margin-left: 4px;\n    flex-shrink: 0;\n"])));
var Attribution = function (_a) {
    var gif = _a.gif, className = _a.className, onClick = _a.onClick;
    var user = gif.user;
    if (!(user === null || user === void 0 ? void 0 : user.username) && !(user === null || user === void 0 ? void 0 : user.display_name)) {
        return null;
    }
    var display_name = user.display_name, username = user.username;
    return (react_1.default.createElement(Container, { className: [Attribution.className, className].join(' '), onClick: function (e) {
            e.preventDefault();
            e.stopPropagation();
            if (onClick) {
                onClick(gif);
            }
            else {
                var url = user.profile_url;
                if (url)
                    window.open(url, '_blank');
            }
        } },
        react_1.default.createElement(Avatar, { user: user }),
        react_1.default.createElement(Username, null, display_name || "@" + username),
        user.is_verified ? react_1.default.createElement(VerifiedBadge, { size: 14 }) : null));
};
Attribution.className = 'giphy-attribution';
exports.default = Attribution;
var templateObject_1, templateObject_2, templateObject_3, templateObject_4;
//# sourceMappingURL=index.js.map